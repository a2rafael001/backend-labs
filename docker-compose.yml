services:
  postgres:
    image: postgres:16
    container_name: ul_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: postgres
    ports:
      - "15433:5432"               
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 10

  pgbouncer:
    image: edoburu/pgbouncer:v1.24.1-p1
    container_name: ul_pgbouncer
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_USER: user
      DB_PASSWORD: mypassword
      DB_HOST: postgres
      DB_PORT: "5432"
      POOL_MODE: transaction
      MAX_CLIENT_CONN: "1000"
      DEFAULT_POOL_SIZE: "50"
      AUTH_TYPE: scram-sha-256
    ports:
      - "15432:5432"               

  webapi:
    image: universelabs-webapi:1.0.5
    container_name: ul_webapi
    depends_on:
      pgbouncer:
        condition: service_started
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_ENVIRONMENT: "Development"
      # Подключаемся ИЗ webapi к pgbouncer по имени сервиса (внутрисетевой DNS)
      DbSettings__ConnectionString: "Host=pgbouncer;Port=5432;Database=postgres;User Id=user;Password=mypassword;Pooling=true;Maximum Pool Size=100"
      DbSettings__MigrationConnectionString: "Host=pgbouncer;Port=5432;Database=postgres;User Id=user;Password=mypassword;Pooling=true;Maximum Pool Size=100"
    ports:
      - "5113:8080"
